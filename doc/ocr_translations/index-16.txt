ORIGINAL
======== 


Kapitel 1

Vorwort

Lieber Programmierer,

mit dem OMIKRON. Assembler haben Sie ein schnelles und komfortables
Entwicklungssystem erworben, das Sie in jeder Phase der Programm-Ent-
wicklung optimal unterstützt.

Der OMIKRON.Assembler ist für Profis entwickelt worden, d.h., es wur-
den viele neue Funktionen und Ideen implementiert, die noch kein anderer
Assembler bietet; jeder Programmierer, der einmal mit diesem Assembler
gearbeitet hat, wird diese Funktionen zu schätzen wissen.

Das soll aber nicht heißen, daß Anfänger mit diesem Assembler falsch be-
raten sind. Ganz im Gegenteil, gerade die sehr einfachen und zugleich sehr
komfortablen Möglichkeiten des Debuggens in Verbindung mit einer extrem
hohen Sicherheit gegen Fehlbedienung erlauben es dem Anfänger, diese Pro-
grammiersprache nach dem Trial-and-Error-Prinzip zu erlernen, was bisher
nur bei BASIC-Interpretern möglich war. Daß der Editor Fehler bereits bei
der Eingabe bemerkt, ist dabei wohl selbstverständlich. Wir mußten in die-
ser Anleitung natürlich einige Fachbegriffe verwenden. Wenn Ihnen ein Wort
nicht kennen, sehen Sie bitte im Anhang C ab Seite 184 nach.

Welcher andere Assembler erlaubt es z. B., ein Programm mit einem Tasten-
druck zu assemblieren, das fertige Programm dem Debugger zu übergeben
und das Programm automatisch zu starten? Und bei Sourcetexten mit we-
niger als 10000 Zeilen dauert das ganze nicht einmal eine Sekunde, Wenn
das Programm ordnungsgemäß beendet wurde, wird ebenfalls automatisch



TRANSLATED
==========


Chapter 1

Foreword

Dear Programmer,

With the Omikron.Assembler have acquired a quick and comfortable
development system that optimally supports it in every phase of program
development.

The Omikron.Assembler has been developed for professionals, i., Many new
features and ideas have been implemented, which does not offer any other
assembler yet; Each programmer who has once worked with this assembler
will appreciate these functions.

But that should not mean that beginners are incorrectly advised with this
assembler. On the contrary, especially the very simple and at the same time
very comfortable possibilities of debugging in conjunction with an extremely
high safety against incorrect operation, it allows the beginner to learn
this programming language according to the trial-and-error principle, which
has so far only with basic interpreters it was possible. That the editor has
already noticed errors when entering is probably a matter of course. Of course
we had to use some technical terms in this manual. If you do not know a word,
please refer to Appendix C from page 184.

Which other assembler allows it z. For example, to assemble a program with
a touch of pressing, to pass the finished program to the debugger and start
the program automatically? And with SourceTexts with less than 10000 lines,
the whole thing does not even take a second if the program has been properly
terminated, also automatically becomes

