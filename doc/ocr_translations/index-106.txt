ORIGINAL
========


Unerlaubte Rechenoperation Sie wollten zum Beispiel mit einer Regi-
sterliste rechnen oder haben z.B. zwei Label (also relozierbare Sym-
bole!) miteinander multipliziert.

5.8 Das Zusammenspiel Assembler <—> Debugger

Der residente Debugger Um vom Assembler in den Debugger springen
zu können, müssen Sie den Debugger vom Assembler nachladen oder bereits
vor dem Laden des Assemblers resident installieren. Das geht ganz einfach,
indem Sie vor dem Start des Assemblers den Debugger starten und mit dem
RESIDENT-Befehl wieder verlassen (Es gibt noch weitere Möglichkeiten den
Debugger resident zu machen (siehe Kapitel 6.12 auf Seite 174)) Dazu ist
mindestens 1 MB RAM nötig; wenn Sie weniger haben, können wir Ihnen
nur empfehlen, Ihren Rechner aufzurüsten — für professionelle Arbeiten sind
1MB bei vielen Programmen erforderlich.

Vom Assembler in den Debugger... Assemblieren Sie Ihren Quellcode
mit einem Druck auf F1 (bzw. mit CONTROL-A). Sinnvoll ist es, wenn Sie
eine Symboltabelle anmelden: Symboltabelle „Standard“ oder „erweitert“
anklicken (zum Debugger werden dann stets alle max. 23 Zeichen übergeben,
unabhängig von der Einstellung). Sie können dann alle Label Ihres Quellcodes
im Debugger verwenden. Der Debugger arbeitet voll symbolisch. Ein Klick
auf „DEBUGGER“ bringt Sie in denselben. Dabei wird der „DEBUGGER“-
Button automatisch default, d. h., bei der nächsten Assemblierung brauchen
Sie nur noch RETURN zu drücken, um in den Debugger zu kommen. Für ganz
Eilige: Denken Sie an ALT-A. Sie können damit Ihren Sourcetext assemblieren
und den Default-Button auslösen. Falls bei der Assemblierung ein Fehler auf-
tritt, springt der Cursor zur fehlerhaften Stelle. Der Befehl DEFAULT 1 macht
den „DEBUGGER“-Button zum Default (siehe Kapitel 5.6.7 auf Seite 97)

...und zurück, an die richtige Stelle im Quellcode Nachdem Sie mit
Untrace, Breakpoints und anderen hilfreichen Nettigkeiten einen Fehler ein-
gekreist haben, sollten Sie ihn am besten gleich im Quellcode korrigieren.



TRANSLATED
==========


Illegal arithmetic operation You wanted to calculate with a register list,
for example, or you multiplied two labels (i.e. relocatable symbols!) with
each other.

5.8 The interaction assembler <—> debugger

The resident debugger In order to be able to jump from the assembler to
the debugger, you must reload the debugger from the assembler or install
it as resident before loading the assembler. This is very easy to do by
starting the debugger before starting the assembler and exiting it again
with the RESIDENT command (there are other ways of making the debugger
resident (see chapter 6.12 on page 174)). At least 1 MB RAM is required
for this ; if you have less, we can only recommend that you upgrade your
computer — many programs require 1MB for professional work.

From assembler to debugger... Assemble your source code by pressing F1 (or
CONTROL-A). It makes sense if you register a symbol table: Click on the
"Standard" or "Extended" symbol table (all max. 23 characters are then
always transferred to the debugger, regardless of the setting). You can
then use all labels of your source code in the debugger. The debugger
works fully symbolically. A click on "DEBUGGER" brings you into the same.
The "DEBUGGER" button is automatically default, i. That is, the next time
you assemble, you only need to press RETURN to get into the debugger. For
those in a hurry: think of ALT-A. You can use it to assemble your source
text and trigger the default button. If an error occurs during assembly,
the cursor jumps to the error location. The DEFAULT 1 command makes the
"DEBUGGER" button the default (see chapter 5.6.7 on page 97)

...and back, to the right spot in the source code After you've localized
an error with untrace, breakpoints, and other helpful niceties, it's best
to correct it right away in the source code.

