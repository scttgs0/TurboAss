ORIGINAL
======== 


If

Syntax : IF Term
Kurzform : IF

Wenn Sie IF ohne Parameter angeben, werden die Bedingungen für UNTRACE
angezeigt, sonst werden sie gesetzt. In der Abbruchbedingung können Sie den
PC, alle Register incl. SR, CCR, USP, SSP, SP und Speicherinhalte abfragen
und miteinander oder mit Konstanten vergleichen. Als Vergleiche sind =, #,
< und > zugelassen. Außerdem sind die logischen Operationen & (and), |
(or), ” (xor) und (not) zugelassen. Auch Klammern können gesetzt werden.

Der Debugger erzeugt aus der Zeile ein Programm, daß die Bedingungen
entsprechend abfragt und das Zero-Flag setzt bzw. löscht. Die Variable UT
(wie UNTRACE) zeigt auf den Anfang dieses Programms; Sie können es
sich also mit „L UT“ ansehen und eventuell verändern. Dadurch ist es Ihnen
auch ermöglicht, schwierigere Abbruchbedingungen zu testen. Das Programm
erhält in Al einen Zeiger auf eine Registertabelle; d.h., die Registerinhalte
des debuggten Programms stehen in einer Tabelle, auf deren Anfang A1 zeigt.

Die Tabelle hat das gleiche Format wie bei GETREGISTER erforderlich:

    1 Langwort D0
    1 Langwort D1

    1 Langwort D7
    1 Langwort A0

    Langwort A7
    Langwort PC
    Langwort USP
    Langwort SSP
    Word SR



TRANSLATED
==========


If

Syntax : IF Term
Short form : IF

If you specify IF without parameters, the conditions for UNTRACE are displayed,
otherwise they will be set. In the termination condition, you can query the PC,
all register including SR, CCR, USP, SSP, SP and memory content or compare them
with each other or with constants. As comparisons are =, <>, <= and >=. In
addition, the logical operations & (and), | (or), ^ (xor) and (not) approved.
Brackets can also be set.

The debugger creates a program from the line that queries the conditions
accordingly and sets or deletes the Zero-Flag. The variable UT (as UNTRACE)
shows at the beginning of this program; So you can look at it with "L UT" and
possibly change it. This also enables them to test more difficult demolition
conditions. The program receives a pointer on a register table in al; This means
that the register content of the debugged program is in a table at the beginning
of which A1 shows.

The table has the same format as for the clerk:

    1 Longword D0
    1 Longword D1

    1 Longword D7
    1 Longword A0

    1 Longword A7
    1 Longword PC
    1 Longword USP
    1 Longword SSP
    1 Word SR
