ORIGINAL
========


USP oder dem SSP (s. 0.), in Abhängigkeit des S(upervisor)-Flags, entspricht.

Sie können alle Register ändern, indem Sie mit der Maus auf die Register-
anzeige klicken. Daraufhin wird der Cursor in die Anzeige gesetzt, und man
kann einen neuen Wert eintragen. Mit den Tasten & und = kann man den
Cursor nach links und rechts bewegen. Mit UNDO, ESC oder durch Druck auf
die rechte Maustaste kann die Eingabe abgebrochen werden — dann wird das
Register nicht geändert. Drücken Sie RETURN, um die Eingabe abzuschließen
und dem Register einen neuen Wert zuzuweisen.

Neben den Registern werden Ihnen wohl zwei Pfeile auffallen; wenn Sie mit
der Maus auf <= klicken, ändern sich die Registerinhalte, zudem erscheint ein
®, Mit den Pfeilen können Sie durch den Cache blättern. Näheres dazu siehe
bei Kapitel 6.4.2 und 6.6.5 auf den Seiten 111 und 140.

Die restlichen 20 Zeilen des Bildschirms gehören zum Screeneditor. Dort er-
scheinen alle Ausgaben. Außerdem werden dort alle Befehle eingegeben. Der
Bildschirmeditor erinnert ein wenig an OMIKRON.BASIC oder an den C-64,
jedoch ist die Tastaturbelegung (siehe Kapitel 6.4.2 auf Seite 111) weitgehend
kompatibel zum Assembler.

Den Cursor können Sie beliebig setzen, indem Sie an entsprechender Stelle
mit der linken Maustaste hinklicken. Natürlich kann der Cursor auch mit den
Cursortasten bewegt werden.

Wenn Sie die rechte Maustaste drücken, wird der unter der Maus stehende
Text bis zu einem der folgenden Zeichen:

!&'*\+{}[]-~|/^=,;:#()? >><>

(oder Space, Zeilenanfang bzw. -ende) an die Cursorposition kopiert (davor
wird noch ein Space eingefügt).

Der Sinn ist folgender: Sie lassen sich zum Beispiel einen Programmteil mit
LIST anzeigen. Vor einen Befehl möchten Sie Breakpoint 1 setzen. Sie tippen:
„B1=“ und klicken mit der rechten Maustaste auf die Adresse vor dem Befehl
und drücken RETURN. Genauso kann man auch Textstücke kopieren.

Wenn Sie ein Programm geladen haben, wird nach einem Doppelklick (mit
der linken Taste) auf eine beliebige Zahl ab dieser Adresse disassembliert,
wenn sie innerhalb des Text-Segments liegt, sonst ein Memorydump ange-
zeigt.

Bei Ausgaben von MEMORY, DUMP, DISASSEMBLE, LIST und SYMBOL-



TRANSLATED
==========


corresponds to either the USP or the SSP (see 0.), depending on the
S(supervisor)-flags, matches.

You can change all registers by clicking on the register display with the
mouse. The cursor is then placed in the display and a new value can be
entered. Use the & and = keys to move the cursor left and right. The input
can be aborted with UNDO, ESC or by pressing the right mouse button — then
the register is not changed. Press RETURN to complete the entry and assign
a new value to the register.

You will probably notice two arrows next to the registers; If you click on
<= with the mouse, the contents of the register will change and a ® will
also appear. Use the arrows to scroll through the cache. For more
information, see chapters 6.4.2 and 6.6.5 on pages 111 and 140.

The remaining 20 lines of the screen belong to the screen editor. All
outputs appear there. In addition, all commands are entered there. The
screen editor is somewhat reminiscent of OMIKRON.BASIC or the C-64, but
the keyboard layout (see chapter 6.4.2 on page 111) is largely compatible
with assembler.

You can place the cursor anywhere you like by clicking on the appropriate
place with the left mouse button. Of course, the cursor can also be moved
with the cursor keys.

If you press the right mouse button, the text under the mouse will expand
to one of the following characters:

!&'*\+{}[]-~|/^=,;:#()? >><>

(or space, beginning or end of line) copied to the cursor position (a space
is inserted in front of it).

The meaning is as follows: You can display a program part with LIST, for
example. You want to set breakpoint 1 before a command. You type: "B1=" and
right click on the address in front of the command and press RETURN. You
can also copy pieces of text.

If you have loaded a program, a double click (with the left button) on any
number from this address will disassemble it if it is within the text
segment, otherwise a memory dump will be displayed.

In the case of MEMORY, DUMP, DISASSEMBLE, LIST and SYMBOL-TABLE outputs,

