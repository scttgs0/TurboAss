ORIGINAL
========


Symboldefinition stand (siehe Kapitel 5.4 auf Seite 28). Dann wird dieser
Dialog angezeigt (Siehe Abbildung 5.24 auf Seite 68) und der Symbolname
in den Dialog übernommen.


    {image}
    Abbildung 5.24: Der Dialog „Symbol suchen“


Der Eintrag „Symbol ersetzen...“ (SHIFT-F3 oder CONTROL-E) ist wohl
die mächtigste Funktion des Assemblers. Mit ihr kann ein Symbol in Se-
kundenbruchteilen umbenannt werden, mehrere Symbole umbenannt werden
oder aber (und das ist wirklich wichtig) nach einem „Block copy“ alle Sym-
bole im Block umbenannt werden. Das spart viele Fehler aufgrund doppelter
Deklarationen. Man kann aber auch global alle Zugriffe auf das Label „test“
durch Zugriffe auf das Label „sprung“ ersetzen.

Kommen wir aber nun zur Erklärung des Kommandos: In der Dialogbox
stehen zwei Zeilen (Siehe Abbildung 5.25 auf Seite 69). In der obersten
wird die gesuchte Symbolmaske, in der unteren die Symbolmaske eingetragen,
durch die ersetzt werden soll. Der Button zwischen den beiden Eingabefeldern
tauscht die beiden Strings aus. Damit kann man z. B. eine falsche Ersetzung
rückgängig machen. Die Buttons „alles“ und „Block“, geben den Suchmodus
an. Bei „alles“ wird ein Symbol global umbenannt, bei „Block“ wird ein
neues Symbol mit neuem Namen eingerichtet. Falls bei der Symbolersetzung
ein Symbol entsteht, welches bereits existiert, erscheint eine Warnbox; nun
kann man entscheiden, ob man das Symbol ersetzen will, nicht ersetzen will,
aber fortfahren, oder Abbrechen einem sinnvoll erscheint.

Zwei Beispiele:
Alle Symbole im Block sollen zusätzlich block_ vorangestellt bekommen:
Suchbegriff : *



TRANSLATED
==========


(see chapter 5.4 on page 28). Then this dialog is displayed (see Figure 5.24
on page 68) and the symbol name is adopted in the dialog.


    {image}
    Abbildung 5.24: Der Dialog „Symbol suchen“


The entry "Replace symbol..." (SHIFT-F3 or CONTROL-E) is probably the most
powerful function of the assembler. It can be used to rename a symbol in a
fraction of a second, to rename several symbols or (and this is really
important) after a "block copy" to rename all symbols in the block. This
saves a lot of errors due to duplicate declarations. However, you can also
globally replace all accesses to the “test” label with accesses to the
“sprung” label.

But now we come to the explanation of the command: There are two lines in
the dialog box (see Figure 5.25 on page 69). The symbol mask you are looking
for is entered in the top one, and the symbol mask to be used for the
replacement is entered in the bottom one. The button between the two input
fields exchanges the two strings. With this you can e.g. undo a wrong
replacement. The buttons "all" and "block" indicate the search mode. With
"everything" a symbol is renamed globally, with "block" a new symbol with a
new name is set up. If symbol replacement creates a symbol that already
exists, a warning box appears; now you can decide whether you want to
replace the symbol, not want to replace it but continue, or cancel if you
think it makes sense.

Two examples:
All symbols in the block should also get block_ preceded:
Search term : *

